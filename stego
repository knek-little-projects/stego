#!/usr/bin/env python3
"""
Utility to pack, encrypt, divide and hide your secrets in two stego files

Usage:
    stego [options] pack <stego_file_1> <stego_file_2> <secret_files>...
    stego [options] unpack <stego_file_1> <stego_file_2> <target_directory>
    stego [options] list <stego_file_1> <stego_file_2>
    stego [options] clear <stego_file_1> <stego_file_2>

Options:
    -h --help
    -s --separator=STRING   glue to concatenate storage files and XORs [default: |||]
"""
from docopt import docopt
from utils.cryptor import Cryptor
from utils.tar import Tar
from utils.tail import TailCollection
from utils.xor import XorableBytes
import logging


def main():
    args = docopt(__doc__)
    sep = args["--separator"].encode()
    stego_files = TailCollection([args["<stego_file_1>"], args["<stego_file_2>"]], sep)

    if args["pack"]:
        packed = Tar.from_files(args["<secret_files>"]).raw
        encrypted = Cryptor(packed).encrypt()
        xor1, xor2 = XorableBytes(encrypted).xor_decompose()
        stego_files.append(xor1)
        stego_files.append(xor2)

    elif args["clear"]:
        stego_files.clear()

    elif args["list"] or args["unpack"]:
        xor1, xor2 = [XorableBytes(x) for x in stego_files]
        encrypted = xor1 ^ xor2
        packed = Cryptor(encrypted).decrypt()
        tar = Tar(packed)
        if args["list"]:
            print(tar.view().decode())
        elif args["unpack"]:
            tar.unpack(args["<target_directory>"])


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    main()
